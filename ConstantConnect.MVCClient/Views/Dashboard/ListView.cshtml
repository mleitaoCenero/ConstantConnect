@model ConstantConnect.MVCClient.Models.DashboardViewModel
@{
    ViewBag.Title = "ListView";
}

<div class="row border-bottom bg-white page-heading">
    <div class="col-lg-12">
        <h3 class="font-light">Search Rooms</h3>
        @*<select class="selectpicker col-lg-4 no-padding" data-live-search="true" title="Rooms" id="select-room">
            @foreach (var item in Model.ActiveRoomsData)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>*@
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                <input type="text" class="form-control" id="search-listview" placeholder="Search">
                <a href="#" class="btn btn-primary input-group-addon" id="export-button">Export</a>
            </div>
        </div>
    </div>
</div>

<div class="page-wrapper">
    <div class="row">
        <div class="ibox">
            @*<div class="ibox-title">
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                        <input type="text" class="form-control" id="search-listview" placeholder="Search">
                        <a href="#" class="btn btn-primary input-group-addon" id="export-button">Export</a>
                    </div>
                </div>
            </div>*@
            <div class="ibox-content">
                <div class="table-container">
                    <table class="table table-striped table-hover" id="table-listview">
                        <thead>
                            <tr>
                                <th rowspan="2" class="vertical-center">Room Name</th>
                                <th colspan="6" class="text-center">Application</th>
                                <th rowspan="2"></th>
                                <th colspan="3" class="text-center">Room Performance</th>
                                <th rowspan="2"></th>
                                <th colspan="2" class="text-center">Service Tickets</th>
                                <th rowspan="2"></th>
                                <th colspan="5" class="text-center min">Constant Connect Status</th>
                                <th rowspan="2" class="vertical-center text-center no-sort">Touchpanel</th>
                            </tr>
                            <tr>
                                <!-- Application Cols-->
                                <th class="small text-center min">CTRL</th>
                                <th class="small text-center min">VTC</th>
                                <th class="small text-center min">PRES</th>
                                <th class="small text-center min">ATC</th>
                                <th class="small text-center min">RC</th>
                                <th class="small text-center min text-nowrap">IN USE</th>

                                <!-- Room Performance Cols-->
                                <th class="small text-center min">UPTIME</th>
                                <th class="small text-center min">SURVEY SCORES</th> 
                                <th class="small text-center min">SURVEY SUBMITTED</th> 

                                <!-- Service Tickets -->
                                <th class="small text-center min">ACTIVE</th>
                                <th class="small text-center min">ALL</th>

                                <!-- Constant Connect Status -->
                                <th class="small text-center min">ONLINE</th>
                                <th class="small text-center min">CTRL</th>
                                <th class="small text-center min">VTC</th>
                                <th class="small text-center min">PRES</th>
                                <th class="small text-center min">ATC</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ActiveRoomsData)
                            {
                                <tr class="text-nowrap">
                                    <td>
                                        @*@Html.ActionLink(item.Name, "ModalAction", "Room", new { Id = item.Id, Name = item.Name, ParentId = item.OrganizationId }, new*@
@Html.ActionLink(item.Name, "ModalAction", "Room", item, new
                                   {
                                       data_target = "#modal-container",
                                       data_toggle = "modal"
                                   })
                                    </td>
                                    @switch (item.ControlStatus)
                                    {
                                        case 0:
                                            <td class="text-center"></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-sliders text-green" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-sliders text-red" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (item.VtcStatus)
                                    {
                                        case 0:
                                            <td class="text-center"></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-video-camera text-green" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-video-camera text-red" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (item.PresentationStatus)
                                    {
                                        case 0:
                                            <td class="text-center"></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-television text-green" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-television text-red" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }

                                    @switch (item.AtcStatus)
                                    {
                                        case 0:
                                            <td class="text-center"></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-phone text-green" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-phone text-red" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }

                                    @* TODO Get Room Check Status *@
                                    <td class="text-center"><i class="fa fa-list-ol" aria-hidden="true"></i></td>

                                    @switch (item.Status)
                                    {
                                        case 0:
                                            <td class="text-center"></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-circle text-green" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-circle text-red" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    <td></td>
                                    @{ var roomPerformance = from room in Model.RoomPerformanceData
                                                              where room.RoomID == item.Id
                                                              select new
                                                              {
                                                                  room.UpTime
                                                              };
                                    }
                                    <td class="text-center">@roomPerformance.Max(r => r.UpTime)</td>
                                    <td class="text-center">TODO</td>
                                    <td class="text-center">TODO</td>
                                    <td class="text-center"></td>

                                    @{ var ServiceTickets = from room in Model.ServiceTicketsData
                                                             where room.RoomID == item.Id
                                                             select new
                                                             {
                                                                 room
                                                             };
                                    }
                                    <td class="text-center">
                                        <div class="listview-panel">
                                            <div class="listview-panel-heading">
                                                <a href="#" data-toggle="popover" data-container="body" data-placement="left" data-template='<div class="popover1" role="tooltip"><div class="arrow"></div><div class="popover-title"></div><div class="popover-content"></div><div class="popover-footer"></div></div>' data-toggle="popover" data-placement="left" data-popover-content="#activetickets-popover-content-@item.Id">
                                                    <p>@ServiceTickets.Count(t => t.room.TicketState.Contains("Active")).ToString()</p>
                                                </a>
                                            </div>
                                            <div class="hidden" id="activetickets-popover-content-@item.Id">
                                                <div class="popover-heading">
                                                    Active Tickets
                                                </div>
                                                <div class="popover-body">
                                                    <ul class="feed-group">

                                                        @{ var tickets = ServiceTickets.Where(t => t.room.TicketState.Contains("Active"));}
                                                        @foreach (var tick in tickets)
                                                        {

                                                            if (tick.room.TicketState.Contains("Active"))
                                                            {
                                                                <li class="feed-item popover-item">
                                                                    <a href="#">
                                                                        <div>
                                                                            <p><strong>@tick.room.TicketNumber</strong></p>
                                                                        </div>
                                                                        <div>@tick.room.TicketSubject</div>
                                                                        <div class="pull-right text-muted">
                                                                            <em>@tick.room.TicketCreatedOn</em>
                                                                        </div>
                                                                        <div class="clearfix"></div>
                                                                    </a>
                                                                </li>
                                                            }
                                                            else
                                                            {
                                                                <li class="feed-item popover-item">
                                                                    No active tickets.
                                                                </li>
                                                            }
                                                        }
                                                    </ul>

                                                    <div class="popover-footer">
                                                        <a class="text-center" href="#">
                                                            <strong>See all tickets</strong>
                                                            <i class="fa fa-angle-right"></i>
                                                        </a>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                    </td>
                                    <td class="text-center">@ServiceTickets.Count().ToString()</td>

                                    <td></td>
                                    @{ var proactiveData = from room in Model.ProactiveRoomsData
                                                            where room.RoomID == item.Id
                                                            select room;
                                    }

                                    @switch (proactiveData.Max(r => r.OnlineStatus))
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-circle text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-circle text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-circle text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (proactiveData.Max(r => r.ControlStatus))
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-sliders text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-sliders text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-sliders text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (proactiveData.Max(r => r.VTCStatus))
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-camera text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-camera text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-camera text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (proactiveData.Max(r => r.PresentationStatus))
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-television text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-television text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-television text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (proactiveData.Max(r => r.ATCStatus))
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-phone text-red"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-phone text-yellow"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-phone text-green"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                   
                                    <td class="text-center">
                                        @if (item.Touchpanel != "http://N/A")
                                        {
                                            <a href="@item.Touchpanel" , target="_blank" class="" id="room-touchpanel" data-toggle="tooltip" data-placement="right" title="Click to open Touch Panel."><i class="fa fa-desktop"></i></a>
                                        }
                                    </td>
                                </tr>
                                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    
</script>

