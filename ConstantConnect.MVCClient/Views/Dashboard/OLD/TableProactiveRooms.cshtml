@model ConstantConnect.MVCClient.Models.DataTableTile<ConstantConnect.DTO.ConstantConnect.Dashboard_ProactiveRooms_Result>
<div class="col-lg-6 col-md-6 col-lg-offset-3">
    <div id="proactiverooms" class="collapse">
        <div class="box box-success box-table">
            <div class="box-header with-border">
                <h3 class="box-title">Proactive Rooms</h3>
                <div class="box-tools pull-right">
                    <div class="btn-group">
                        <button type="button" class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown">
                            <i class="fa fa-wrench"></i>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li><a href="#">Modify View</a></li>
                            <li><a href="#">Save View</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#">My Views</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#" class="export" data-content="table-activerooms">Export data</a></li>
                        </ul>
                    </div>
                    <button type="button" class="btn btn-box-tool" data-toggle="collapse" data-target="#proactiverooms" @*data-widget="collapse"*@><i class="fa fa-times"></i></button>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body" style="display: block;">
                <div class="row">
                    <div class="input-group">
                        <input type="hidden" name="search_param" value="all" id="search_param">
                        <input type="text" class="form-control table-filter" id="search-proactiverooms" placeholder="Search for a room">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button"><span class="fa fa-search"></span></button>
                        </span>
                    </div>
                </div>
                <!-- /.row -->
                <div class="table-container">
                    <table class="table table-striped table-hover data-table" width="100%" id="table-proactiverooms">
                        <thead>
                            <tr>
                                <th class="small text-center min">Name</th>
                                <th class="small text-center min">Online</th>
                                <th class="small text-center min">CTRL</th>
                                <th class="small text-center min">VTC</th>
                                <th class="small text-center min">Pres</th>
                                <th class="small text-center min">ATC</th>
                                <th class="small text-center min">Test History</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Data)
                            {
                                <tr class="">
                                    <td><a href="#" data-toggle="modal" data-target="#room-modal">@item.RoomName</a></td>
                                    @switch (item.OnlineStatus)
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-circle text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-circle text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-circle text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }

                                    @switch (item.ControlStatus)
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-sliders text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-sliders text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-sliders text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (item.VTCStatus)
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-camera text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-camera text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-camera text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }

                                    @switch (item.PresentationStatus)
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-television text-red" aria-hidden="true"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-television text-yellow" aria-hidden="true"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-television text-green" aria-hidden="true"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    @switch (item.ATCStatus)
                                    {
                                        case 0:
                                            <td class="text-center"><i class="fa fa-phone text-red"></i></td>
                                            break;
                                        case 1:
                                            <td class="text-center"><i class="fa fa-phone text-yellow"></i></td>
                                            break;
                                        case 2:
                                            <td class="text-center"><i class="fa fa-phone text-green"></i></td>
                                            break;
                                        default:
                                            <td></td>
                                            break;
                                    }
                                    <td class="text-right">
                                        <button type="button" class="btn btn-outline text-black" data-toggle="popover" data-container="body" @*data-trigger="focus"*@ data-placement="left" data-popover-content="#proactive-testData" id="proactive-popover">
                                            Proactive Data
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- ./box-body -->
            <div class="box-footer" style="display: block;">
                <div class="row">
                    <div class="col-sm-2 col-md-offset-1">
                        <div class="description-block">
                            <span class="description-text text-blue huge">
                                @Model.Data.Count(i => i.RoomName != null)
                            </span>
                            <h5 class="description-header">Total</h5>
                            <span class="description-text">Proactive Rooms</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <!-- /.col -->
                    <div class="col-sm-2">
                        <div class="description-block">
                            <span class="description-text text-green huge">
                                @Model.Data.Count(i => i.OnlineStatus == 1)
                            </span>
                            <h5 class="description-header">Online</h5>
                            <span class="description-text">TOTAL ROOMS</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <!-- /.col -->
                    <div class="col-sm-2">
                        <div class="description-block">
                            <span class="description-text text-yellow huge">
                                @Model.Data.Count(i => i.VTCStatus == 1)
                            </span>
                            <h5 class="description-header">Video Conference</h5>
                            <span class="description-text">TOTAL INUSE</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <!-- /.col -->
                    <div class="col-sm-2">
                        <div class="description-block">
                            <span class="description-text text-red huge">
                                @Model.Data.Count(i => i.ATCStatus == 1)
                            </span>
                            <h5 class="description-header">Audio Conference</h5>
                            <span class="description-text">TOTAL INUSE</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                    <div class="col-sm-2">
                        <div class="description-block">
                            <span class="description-text text-light-blue small">
                                @Model.Data.Max(i => i.TestDate)
                            </span>
                            <h5 class="description-header">Last Test</h5>
                            <span class="description-text">DATE</span>
                        </div>
                        <!-- /.description-block -->
                    </div>
                </div>
                <!-- /.row -->
            </div>
            <!-- /.box-footer -->
        </div>
    </div>
</div>
<!-- /.panel -->
<script>
    $('#search-proactiverooms').keyup(function () {
        var value = this.value.toLowerCase().trim();
        $('#table-proactiverooms').find("tr").each(function (index) {
            if (!index) return;
            $(this).find("td").each(function () {
                var id = $(this).text().toLowerCase().trim();
                var notFound = (id.indexOf(value) == -1);
                $(this).closest('tr').toggle(!notFound);
                return notFound;
            })
        });
    });
</script>


