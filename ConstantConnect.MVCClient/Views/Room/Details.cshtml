@*@model ConstantConnect.DTO.CRM.New_clientroom*@
@model ConstantConnect.DTO.Shared.Room
<div class="container-fluid">
    <div class="row">
        <h3 class="font-light">Room Information</h3>
        @using (Html.BeginForm("edit", "Room", FormMethod.Post, new { id = "form-roomedit" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="col-lg-6 b-r">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, "Display Name", htmlAttributes: new { @class = "control-label col-md-3 text-nowrap" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Display Name" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrganizationName, "Organization", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.OrganizationName, new { htmlAttributes = new { @class = "form-control", placeholder = "Organization Name", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.OrganizationName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, "City", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, "State", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ServicePlan, "Service Plan", htmlAttributes: new { @class = "control-label col-md-3 text-nowrap" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ServicePlan, new { htmlAttributes = new { @class = "form-control", placeholder = "Service Plan", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ServicePlan, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <h4 class="font-light">Room Information</h4>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.new_RoomContactIdName, "Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.new_RoomContactIdName, new { htmlAttributes = new { @class = "form-control", placeholder = "Room Contact", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.new_RoomContactIdName, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model, "Model", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.new_RoomContactIdName, new { htmlAttributes = new { @class = "form-control", placeholder = "Room Contact", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.new_RoomContactIdName, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            <label for="contact-phone" class="col-sm-4 col-form-label">Phone</label>
                            <div class="input-group col-sm-8 pull-right">
                                <input type="text" class="form-control" id="contact-phone" value="TODO" readonly />
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Touchpanel, "Touchpanel", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <a href="@Model.Touchpanel" , target="_blank" class="" id="room-touchpanel" data-toggle="tooltip" data-placement="right" title="Click to open Touch Panel."><i class="fa fa-desktop fa-5x"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>